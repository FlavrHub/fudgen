package rparser

import (
	"errors"
	"gopkg.in/yaml.v2"
)

/*
see recipes/r.yml
*/

type recipe struct {
	Name        string   //name of food/recipe/step
	Operation   string   //name of operation to make this step
	Notes       string   //random notes to keep track of
	Attributes  []string //list of things like quantity or time
	Identifier  int      //unique identifier for this step, autogenerated by parser
	Ingrediants []recipe //if empty then this is raw ingrediant
}

func Parse(input string) (r recipe, err error) {
	//TODO - make this accept custom format string
	err = yaml.Unmarshal([]byte(input), &r)
	id := 0
	var check func(*recipe)
	check = func(R *recipe) {
		id++
		(*R).Identifier = id
		if len((*R).Ingrediants) == 0 && (*R).Operation != "" {
			err = errors.New("can't have operation description on raw ingrediant")
			return
		}
		if len((*R).Ingrediants) > 0 {
			for k := 0; k < len((*R).Ingrediants); k++ {
				check(&((*R).Ingrediants[k]))
			}
		}
	}
	check(&r)
	return r, err
}
